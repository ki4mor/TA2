
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMULTDIVleftPLUSMINUSCOMMA DECIMAL DIV DOT LASIGNMENT LESS LESSEQ LRNDBRACKET LSQBRACKET MINUS MORE MOREEQ MULT NAME NEWLINE PLUS RASIGNMENT RRNDBRACKET RSQBRACKET begin big check compass do end field go normal return rl rr small sonar tiny untilprogram : functionsfunctions : functions function\n                        | functionfunction : type NAME LSQBRACKET parameters RSQBRACKET begin NEWLINE statements DOT NEWLINE end NEWLINEstatements : statements COMMA NEWLINE statement\n                        | statementstatement : empty\n                        | declaration\n                        | assignment\n                        | conversion\n                        | CHECK\n                        | UNTIL\n                        | function_call\n                        | RETURNparameters : parameter COMMA parameters\n                        | parameterparameter : type NAME\n                    | empty function_call : NAME LRNDBRACKET variants RRNDBRACKET\n                        | NAME LRNDBRACKET RRNDBRACKETRETURN : return expressionempty : declaration : type variants LASIGNMENT decimal_expression\n                        | field type type variants LASIGNMENT decimal_expressionvariants : variant variants\n                        | variantvariant : NAME\n                    | NAME indicesindices : LSQBRACKET expression expression RSQBRACKETtype : tiny\n                    | small\n                    | normal\n                    | bigexpression : math_expression\n                        | decimal_expression\n                        | variant\n                        | robot_command\n                        | ext_assig\n                        | function_callext_assig : assigassig : expression RASIGNMENT variant\n                        | variant LASIGNMENT expressionmath_expression : expression PLUS expression\n                            | expression MINUS expression\n                            | expression MULT expression\n                            | expression DIV expression\n                            | expression MORE expression\n                            | expression LESS expression\n                            | expression MOREEQ expression\n                            | expression LESSEQ expression\n                            | LRNDBRACKET expression PLUS expression RRNDBRACKET\n                            | LRNDBRACKET expression MINUS expression RRNDBRACKET\n                            | LRNDBRACKET expression MULT expression RRNDBRACKET\n                            | LRNDBRACKET expression DIV expression RRNDBRACKET\n                            | LRNDBRACKET expression MORE expression RRNDBRACKET\n                            | LRNDBRACKET expression LESS expression RRNDBRACKET\n                            | LRNDBRACKET expression MOREEQ expression RRNDBRACKET\n                            | LRNDBRACKET expression LESSEQ expression RRNDBRACKETdecimal_const : DECIMALdecimal_expression : decimal_const\n                            | PLUS decimal_const\n                            | MINUS decimal_constrobot_command : rl\n                        | rr\n                        | go\n                        | sonar\n                        | compassassignment : variant LASIGNMENT expression\n                        | expression RASIGNMENT variant\n                        | variant LASIGNMENT expression RASIGNMENT variant\n                        | expression RASIGNMENT variant LASIGNMENT expressionconversion : MINUS NAME\n                        | PLUS NAMEUNTIL : until expression do NEWLINE statements DOTCHECK : check expression do NEWLINE statements DOTdeclaration : type error\n                        | type variants  LASIGNMENT error\n                        | field type type error\n                        | field type type variants LASIGNMENT error\n                        | declaration errorindices : LSQBRACKET error RSQBRACKET\n                    | LSQBRACKET error expression RSQBRACKET\n                    | LSQBRACKET expression error RSQBRACKET\n                    | LSQBRACKET error error RSQBRACKET\n                    | indices errorassignment : variant LASIGNMENT error\n                        | error LASIGNMENT expression\n                        | error RASIGNMENT variant\n                        | expression RASIGNMENT error\n                        | error LASIGNMENT expression RASIGNMENT variant\n                        | variant LASIGNMENT error RASIGNMENT variant\n                        | variant LASIGNMENT expression RASIGNMENT error\n                        | error LASIGNMENT error RASIGNMENT variant\n                        | variant LASIGNMENT error RASIGNMENT error\n                        | error LASIGNMENT expression RASIGNMENT error\n                        | error RASIGNMENT variant LASIGNMENT expression\n                        | expression RASIGNMENT error LASIGNMENT expression\n                        | expression RASIGNMENT variant LASIGNMENT error\n                        | error RASIGNMENT error LASIGNMENT expression\n                        | expression RASIGNMENT error LASIGNMENT error\n                        | error RASIGNMENT variant LASIGNMENT errorconversion : MINUS error\n                        | PLUS error\n                        | conversion errorUNTIL : until error do NEWLINE statements DOT\n                    | UNTIL errorCHECK : check error do NEWLINE statements DOT\n                    | CHECK errorfunction : type error LSQBRACKET parameters RSQBRACKET begin NEWLINE statements DOT NEWLINE end NEWLINE\n                    | type NAME LSQBRACKET error RSQBRACKET begin NEWLINE statements DOT NEWLINE end NEWLINE\n                    | type NAME LSQBRACKET parameters RSQBRACKET error NEWLINE statements DOT NEWLINE end NEWLINE\n                    | type NAME LSQBRACKET parameters RSQBRACKET begin NEWLINE statements DOT NEWLINE error NEWLINE\n                    | type error LSQBRACKET error RSQBRACKET begin NEWLINE statements DOT NEWLINE end NEWLINE\n                    | type NAME LSQBRACKET error RSQBRACKET error NEWLINE statements DOT NEWLINE end NEWLINE\n                    | type NAME LSQBRACKET parameters RSQBRACKET error NEWLINE statements DOT NEWLINE error NEWLINE\n                    | type error LSQBRACKET parameters RSQBRACKET begin NEWLINE statements DOT NEWLINE error NEWLINE\n                    | type error LSQBRACKET parameters RSQBRACKET error NEWLINE statements DOT NEWLINE end NEWLINE\n                    | type NAME LSQBRACKET error RSQBRACKET begin NEWLINE statements DOT NEWLINE error NEWLINE\n                    | type error LSQBRACKET error RSQBRACKET error NEWLINE statements DOT NEWLINE end NEWLINE\n                    | type NAME LSQBRACKET error RSQBRACKET error NEWLINE statements DOT NEWLINE error NEWLINE\n                    | type error LSQBRACKET parameters RSQBRACKET error NEWLINE statements DOT NEWLINE error NEWLINE\n                    | type error LSQBRACKET error RSQBRACKET begin NEWLINE statements DOT NEWLINE error NEWLINE\n                    | function error\n                   RETURN : return error\n                    | RETURN error'
    
_lr_action_items = {'tiny':([0,2,3,5,6,7,8,9,10,13,14,25,37,38,39,40,41,42,43,44,59,102,146,208,210,212,213,241,242,270,271,272,273,274,275,276,277,278,279,280,281,282,],[5,5,-3,-30,-31,-32,-33,-2,-123,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-4,-112,-115,-111,-120,-114,-118,-110,-119,-122,-113,-121,-117,-116,-109,]),'small':([0,2,3,5,6,7,8,9,10,13,14,25,37,38,39,40,41,42,43,44,59,102,146,208,210,212,213,241,242,270,271,272,273,274,275,276,277,278,279,280,281,282,],[6,6,-3,-30,-31,-32,-33,-2,-123,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-4,-112,-115,-111,-120,-114,-118,-110,-119,-122,-113,-121,-117,-116,-109,]),'normal':([0,2,3,5,6,7,8,9,10,13,14,25,37,38,39,40,41,42,43,44,59,102,146,208,210,212,213,241,242,270,271,272,273,274,275,276,277,278,279,280,281,282,],[7,7,-3,-30,-31,-32,-33,-2,-123,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-4,-112,-115,-111,-120,-114,-118,-110,-119,-122,-113,-121,-117,-116,-109,]),'big':([0,2,3,5,6,7,8,9,10,13,14,25,37,38,39,40,41,42,43,44,59,102,146,208,210,212,213,241,242,270,271,272,273,274,275,276,277,278,279,280,281,282,],[8,8,-3,-30,-31,-32,-33,-2,-123,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-4,-112,-115,-111,-120,-114,-118,-110,-119,-122,-113,-121,-117,-116,-109,]),'$end':([1,2,3,9,10,241,242,270,271,272,273,274,275,276,277,278,279,280,281,282,],[0,-1,-3,-2,-123,-4,-112,-115,-111,-120,-114,-118,-110,-119,-122,-113,-121,-117,-116,-109,]),'error':([3,4,5,6,7,8,9,10,13,14,23,24,26,27,37,38,39,40,41,42,43,44,45,51,53,54,55,57,58,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,87,89,91,92,95,96,97,98,99,100,101,103,104,113,114,115,116,117,118,121,122,125,129,130,138,141,142,143,144,145,146,151,156,157,158,159,160,161,162,163,178,179,180,182,183,184,185,186,187,193,199,201,203,204,205,206,207,208,209,210,211,212,213,235,236,237,238,239,240,241,242,249,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,],[10,12,-30,-31,-32,-33,10,-123,17,20,29,30,33,35,48,48,48,48,48,48,48,48,87,97,98,99,100,101,-35,114,117,120,127,130,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,-76,-27,142,144,147,149,-80,-104,-108,-106,-125,153,155,-72,-102,-62,-73,-103,-61,-36,-39,-27,-21,-124,186,-20,-85,189,192,196,48,203,-43,-44,-45,-46,-47,-48,-49,-50,222,224,226,229,231,233,-23,-77,-19,-81,244,247,-78,251,253,255,257,48,-41,48,-42,48,48,-29,-83,-60,-60,-84,-82,-4,-112,284,-51,-52,-53,-54,-55,-56,-57,-58,-115,-111,-120,-114,-118,-110,-119,-122,-113,-121,-117,-116,-109,-24,-79,-75,-107,-74,-105,]),'NAME':([4,5,6,7,8,15,37,38,39,40,41,42,43,44,45,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,88,89,90,91,92,95,96,103,104,105,106,107,108,109,110,111,112,115,118,121,122,125,141,142,143,144,146,151,156,157,158,159,160,161,162,163,165,167,170,171,172,173,174,175,176,177,187,190,191,193,198,199,200,201,204,205,206,207,208,209,210,211,212,213,235,236,237,238,239,240,262,263,264,265,266,267,268,269,],[11,-30,-31,-32,-33,22,46,46,46,46,46,46,46,46,89,-35,113,116,125,125,125,125,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,89,-27,89,-28,125,125,89,125,89,125,125,125,125,125,125,125,125,-62,-61,-36,-39,-27,-20,-85,125,125,46,89,-43,-44,-45,-46,-47,-48,-49,-50,89,125,125,125,125,125,125,125,125,125,-19,125,125,-81,89,89,125,125,89,89,125,125,46,-41,46,-42,46,46,-29,-83,-60,-60,-84,-82,-51,-52,-53,-54,-55,-56,-57,-58,]),'LSQBRACKET':([11,12,46,89,125,],[13,14,92,92,92,]),'COMMA':([13,14,18,19,22,25,37,38,39,40,41,42,43,44,47,49,50,51,52,53,54,55,56,57,58,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,89,91,97,98,99,100,101,113,114,115,116,117,118,121,122,125,129,130,141,142,146,148,150,152,153,154,155,156,157,158,159,160,161,162,163,185,186,187,193,197,203,208,209,210,211,212,213,235,236,239,240,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,283,284,285,286,287,288,],[-22,-22,25,-18,-17,-22,-22,-22,-22,-22,-22,-22,-22,-22,94,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,94,94,94,94,94,94,94,-76,-27,-28,-80,-104,-108,-106,-125,-72,-102,-62,-73,-103,-61,-36,-39,-27,-21,-124,-20,-85,-22,-87,-88,-68,-86,-69,-89,-43,-44,-45,-46,-47,-48,-49,-50,-23,-77,-19,-81,-5,-78,-22,-41,-22,-42,-22,-22,-29,-83,-84,-82,-93,-95,-41,-99,-101,-96,-41,-92,-91,-94,-71,-98,-97,-100,94,94,94,94,-51,-52,-53,-54,-55,-56,-57,-58,-24,-79,-75,-107,-74,-105,]),'RSQBRACKET':([13,14,16,17,18,19,20,21,22,25,32,58,68,69,70,71,72,73,74,75,76,77,78,89,91,115,118,121,122,125,141,142,144,156,157,158,159,160,161,162,163,187,188,189,192,193,194,209,211,235,236,237,238,239,240,262,263,264,265,266,267,268,269,],[-22,-22,23,24,-16,-18,26,27,-17,-22,-15,-35,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,-27,-28,-62,-61,-36,-39,-27,-20,-85,193,-43,-44,-45,-46,-47,-48,-49,-50,-19,235,236,239,-81,240,-41,-42,-29,-83,-60,-60,-84,-82,-51,-52,-53,-54,-55,-56,-57,-58,]),'begin':([23,24,26,27,],[28,31,34,36,]),'NEWLINE':([28,29,30,31,33,34,35,36,93,94,131,132,133,134,135,136,137,164,166,168,169,195,196,222,223,224,225,226,227,228,229,230,231,232,233,234,],[37,38,39,40,41,42,43,44,145,146,178,179,180,181,182,183,184,208,210,212,213,241,242,270,271,272,273,274,275,276,277,278,279,280,281,282,]),'DOT':([37,38,39,40,41,42,43,44,47,49,50,51,52,53,54,55,56,57,58,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,89,91,97,98,99,100,101,113,114,115,116,117,118,121,122,125,129,130,141,142,146,148,150,152,153,154,155,156,157,158,159,160,161,162,163,185,186,187,193,197,203,208,209,210,211,212,213,235,236,239,240,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,283,284,285,286,287,288,],[-22,-22,-22,-22,-22,-22,-22,-22,93,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,131,132,133,134,135,136,137,-76,-27,-28,-80,-104,-108,-106,-125,-72,-102,-62,-73,-103,-61,-36,-39,-27,-21,-124,-20,-85,-22,-87,-88,-68,-86,-69,-89,-43,-44,-45,-46,-47,-48,-49,-50,-23,-77,-19,-81,-5,-78,-22,-41,-22,-42,-22,-22,-29,-83,-84,-82,-93,-95,-41,-99,-101,-96,-41,-92,-91,-94,-71,-98,-97,-100,285,286,287,288,-51,-52,-53,-54,-55,-56,-57,-58,-24,-79,-75,-107,-74,-105,]),'field':([37,38,39,40,41,42,43,44,146,208,210,212,213,],[59,59,59,59,59,59,59,59,59,59,59,59,59,]),'MINUS':([37,38,39,40,41,42,43,44,46,56,58,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,89,91,92,95,103,105,106,107,108,109,110,111,112,115,118,119,121,122,125,126,128,129,138,141,142,143,144,146,148,152,154,156,157,158,159,160,161,162,163,167,170,171,172,173,174,175,176,177,187,188,190,191,193,194,200,201,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,235,236,237,238,239,240,245,246,248,249,250,254,256,262,263,264,265,266,267,268,269,],[62,62,62,62,62,62,62,62,-27,-39,-35,-36,106,124,124,124,124,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,-27,-28,124,124,124,124,124,124,124,124,124,124,124,-62,-61,106,-36,-39,-27,106,171,106,124,-20,-85,191,124,62,106,106,-41,-43,-44,106,106,106,106,106,106,124,124,124,124,124,124,124,124,124,-19,106,124,124,-81,106,124,124,124,124,62,-41,62,106,62,62,-43,-44,106,106,106,106,106,106,-29,-83,-60,-60,-84,-82,-41,106,106,124,-41,106,106,-51,-52,-53,-54,-55,-56,-57,-58,]),'PLUS':([37,38,39,40,41,42,43,44,46,56,58,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,89,91,92,95,103,105,106,107,108,109,110,111,112,115,118,119,121,122,125,126,128,129,138,141,142,143,144,146,148,152,154,156,157,158,159,160,161,162,163,167,170,171,172,173,174,175,176,177,187,188,190,191,193,194,200,201,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,235,236,237,238,239,240,245,246,248,249,250,254,256,262,263,264,265,266,267,268,269,],[63,63,63,63,63,63,63,63,-27,-39,-35,-36,105,123,123,123,123,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,-27,-28,123,123,123,123,123,123,123,123,123,123,123,-62,-61,105,-36,-39,-27,105,170,105,123,-20,-85,190,123,63,105,105,-41,-43,-44,105,105,105,105,105,105,123,123,123,123,123,123,123,123,123,-19,105,123,123,-81,105,123,123,123,123,63,-41,63,105,63,63,-43,-44,105,105,105,105,105,105,-29,-83,-60,-60,-84,-82,-41,105,105,123,-41,105,105,-51,-52,-53,-54,-55,-56,-57,-58,]),'check':([37,38,39,40,41,42,43,44,146,208,210,212,213,],[64,64,64,64,64,64,64,64,64,64,64,64,64,]),'until':([37,38,39,40,41,42,43,44,146,208,210,212,213,],[65,65,65,65,65,65,65,65,65,65,65,65,65,]),'return':([37,38,39,40,41,42,43,44,146,208,210,212,213,],[67,67,67,67,67,67,67,67,67,67,67,67,67,]),'LRNDBRACKET':([37,38,39,40,41,42,43,44,46,58,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,89,91,92,95,103,105,106,107,108,109,110,111,112,115,118,121,122,125,141,142,143,144,146,156,157,158,159,160,161,162,163,167,170,171,172,173,174,175,176,177,187,190,191,193,200,201,206,207,208,209,210,211,212,213,235,236,237,238,239,240,262,263,264,265,266,267,268,269,],[66,66,66,66,66,66,66,66,90,-35,66,66,66,66,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,-27,-28,66,66,66,66,66,66,66,66,66,66,66,-62,-61,-36,-39,90,-20,-85,66,66,66,-43,-44,-45,-46,-47,-48,-49,-50,66,66,66,66,66,66,66,66,66,-19,66,66,-81,66,66,66,66,66,-41,66,-42,66,66,-29,-83,-60,-60,-84,-82,-51,-52,-53,-54,-55,-56,-57,-58,]),'rl':([37,38,39,40,41,42,43,44,58,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,89,91,92,95,103,105,106,107,108,109,110,111,112,115,118,121,122,125,141,142,143,144,146,156,157,158,159,160,161,162,163,167,170,171,172,173,174,175,176,177,187,190,191,193,200,201,206,207,208,209,210,211,212,213,235,236,237,238,239,240,262,263,264,265,266,267,268,269,],[72,72,72,72,72,72,72,72,-35,72,72,72,72,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,-27,-28,72,72,72,72,72,72,72,72,72,72,72,-62,-61,-36,-39,-27,-20,-85,72,72,72,-43,-44,-45,-46,-47,-48,-49,-50,72,72,72,72,72,72,72,72,72,-19,72,72,-81,72,72,72,72,72,-41,72,-42,72,72,-29,-83,-60,-60,-84,-82,-51,-52,-53,-54,-55,-56,-57,-58,]),'rr':([37,38,39,40,41,42,43,44,58,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,89,91,92,95,103,105,106,107,108,109,110,111,112,115,118,121,122,125,141,142,143,144,146,156,157,158,159,160,161,162,163,167,170,171,172,173,174,175,176,177,187,190,191,193,200,201,206,207,208,209,210,211,212,213,235,236,237,238,239,240,262,263,264,265,266,267,268,269,],[73,73,73,73,73,73,73,73,-35,73,73,73,73,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,-27,-28,73,73,73,73,73,73,73,73,73,73,73,-62,-61,-36,-39,-27,-20,-85,73,73,73,-43,-44,-45,-46,-47,-48,-49,-50,73,73,73,73,73,73,73,73,73,-19,73,73,-81,73,73,73,73,73,-41,73,-42,73,73,-29,-83,-60,-60,-84,-82,-51,-52,-53,-54,-55,-56,-57,-58,]),'go':([37,38,39,40,41,42,43,44,58,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,89,91,92,95,103,105,106,107,108,109,110,111,112,115,118,121,122,125,141,142,143,144,146,156,157,158,159,160,161,162,163,167,170,171,172,173,174,175,176,177,187,190,191,193,200,201,206,207,208,209,210,211,212,213,235,236,237,238,239,240,262,263,264,265,266,267,268,269,],[74,74,74,74,74,74,74,74,-35,74,74,74,74,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,-27,-28,74,74,74,74,74,74,74,74,74,74,74,-62,-61,-36,-39,-27,-20,-85,74,74,74,-43,-44,-45,-46,-47,-48,-49,-50,74,74,74,74,74,74,74,74,74,-19,74,74,-81,74,74,74,74,74,-41,74,-42,74,74,-29,-83,-60,-60,-84,-82,-51,-52,-53,-54,-55,-56,-57,-58,]),'sonar':([37,38,39,40,41,42,43,44,58,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,89,91,92,95,103,105,106,107,108,109,110,111,112,115,118,121,122,125,141,142,143,144,146,156,157,158,159,160,161,162,163,167,170,171,172,173,174,175,176,177,187,190,191,193,200,201,206,207,208,209,210,211,212,213,235,236,237,238,239,240,262,263,264,265,266,267,268,269,],[75,75,75,75,75,75,75,75,-35,75,75,75,75,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,-27,-28,75,75,75,75,75,75,75,75,75,75,75,-62,-61,-36,-39,-27,-20,-85,75,75,75,-43,-44,-45,-46,-47,-48,-49,-50,75,75,75,75,75,75,75,75,75,-19,75,75,-81,75,75,75,75,75,-41,75,-42,75,75,-29,-83,-60,-60,-84,-82,-51,-52,-53,-54,-55,-56,-57,-58,]),'compass':([37,38,39,40,41,42,43,44,58,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,89,91,92,95,103,105,106,107,108,109,110,111,112,115,118,121,122,125,141,142,143,144,146,156,157,158,159,160,161,162,163,167,170,171,172,173,174,175,176,177,187,190,191,193,200,201,206,207,208,209,210,211,212,213,235,236,237,238,239,240,262,263,264,265,266,267,268,269,],[76,76,76,76,76,76,76,76,-35,76,76,76,76,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,-27,-28,76,76,76,76,76,76,76,76,76,76,76,-62,-61,-36,-39,-27,-20,-85,76,76,76,-43,-44,-45,-46,-47,-48,-49,-50,76,76,76,76,76,76,76,76,76,-19,76,76,-81,76,76,76,76,76,-41,76,-42,76,76,-29,-83,-60,-60,-84,-82,-51,-52,-53,-54,-55,-56,-57,-58,]),'DECIMAL':([37,38,39,40,41,42,43,44,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,89,91,92,95,103,105,106,107,108,109,110,111,112,115,118,121,122,123,124,125,138,141,142,143,144,146,156,157,158,159,160,161,162,163,167,170,171,172,173,174,175,176,177,187,190,191,193,200,201,206,207,208,209,210,211,212,213,235,236,237,238,239,240,249,262,263,264,265,266,267,268,269,],[78,78,78,78,78,78,78,78,-35,78,78,78,78,78,78,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,-27,-28,78,78,78,78,78,78,78,78,78,78,78,-62,-61,-36,-39,78,78,-27,78,-20,-85,78,78,78,-43,-44,-45,-46,-47,-48,-49,-50,78,78,78,78,78,78,78,78,78,-19,78,78,-81,78,78,78,78,78,-41,78,-42,78,78,-29,-83,-60,-60,-84,-82,78,-51,-52,-53,-54,-55,-56,-57,-58,]),'LASIGNMENT':([46,48,60,86,88,89,91,121,125,139,142,149,150,154,155,193,202,235,236,239,240,],[-27,95,103,138,-26,-27,-28,167,-27,-25,-85,200,201,206,207,-81,249,-29,-83,-84,-82,]),'RASIGNMENT':([46,48,56,58,60,61,68,69,70,71,72,73,74,75,76,77,78,89,91,115,118,119,121,122,125,126,128,129,141,142,143,147,148,152,153,154,156,157,158,159,160,161,162,163,187,188,193,194,209,211,214,215,216,217,218,219,220,221,235,236,237,238,239,240,245,246,248,250,254,256,262,263,264,265,266,267,268,269,],[-27,96,-39,-35,-36,104,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,-27,-28,-62,-61,165,-36,-39,-27,165,165,165,-20,-85,165,198,199,204,205,-41,-43,-44,-45,-46,165,165,165,165,-19,165,-81,165,-41,165,-43,-44,-45,-46,165,165,165,165,-29,-83,-60,-60,-84,-82,-41,165,165,-41,165,165,-51,-52,-53,-54,-55,-56,-57,-58,]),'MULT':([46,56,58,60,61,68,69,70,71,72,73,74,75,76,77,78,89,91,115,118,119,121,122,125,126,128,129,141,142,143,148,152,154,156,157,158,159,160,161,162,163,187,188,193,194,209,211,214,215,216,217,218,219,220,221,235,236,237,238,239,240,245,246,248,250,254,256,262,263,264,265,266,267,268,269,],[-27,-39,-35,-36,107,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,-27,-28,-62,-61,107,-36,-39,-27,107,172,107,-20,-85,107,107,107,-41,-43,-44,-45,-46,107,107,107,107,-19,107,-81,107,-41,107,-43,-44,-45,-46,107,107,107,107,-29,-83,-60,-60,-84,-82,-41,107,107,-41,107,107,-51,-52,-53,-54,-55,-56,-57,-58,]),'DIV':([46,56,58,60,61,68,69,70,71,72,73,74,75,76,77,78,89,91,115,118,119,121,122,125,126,128,129,141,142,143,148,152,154,156,157,158,159,160,161,162,163,187,188,193,194,209,211,214,215,216,217,218,219,220,221,235,236,237,238,239,240,245,246,248,250,254,256,262,263,264,265,266,267,268,269,],[-27,-39,-35,-36,108,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,-27,-28,-62,-61,108,-36,-39,-27,108,173,108,-20,-85,108,108,108,-41,-43,-44,-45,-46,108,108,108,108,-19,108,-81,108,-41,108,-43,-44,-45,-46,108,108,108,108,-29,-83,-60,-60,-84,-82,-41,108,108,-41,108,108,-51,-52,-53,-54,-55,-56,-57,-58,]),'MORE':([46,56,58,60,61,68,69,70,71,72,73,74,75,76,77,78,89,91,115,118,119,121,122,125,126,128,129,141,142,143,148,152,154,156,157,158,159,160,161,162,163,187,188,193,194,209,211,214,215,216,217,218,219,220,221,235,236,237,238,239,240,245,246,248,250,254,256,262,263,264,265,266,267,268,269,],[-27,-39,-35,-36,109,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,-27,-28,-62,-61,109,-36,-39,-27,109,174,109,-20,-85,109,109,109,-41,-43,-44,-45,-46,109,109,109,109,-19,109,-81,109,-41,109,-43,-44,-45,-46,109,109,109,109,-29,-83,-60,-60,-84,-82,-41,109,109,-41,109,109,-51,-52,-53,-54,-55,-56,-57,-58,]),'LESS':([46,56,58,60,61,68,69,70,71,72,73,74,75,76,77,78,89,91,115,118,119,121,122,125,126,128,129,141,142,143,148,152,154,156,157,158,159,160,161,162,163,187,188,193,194,209,211,214,215,216,217,218,219,220,221,235,236,237,238,239,240,245,246,248,250,254,256,262,263,264,265,266,267,268,269,],[-27,-39,-35,-36,110,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,-27,-28,-62,-61,110,-36,-39,-27,110,175,110,-20,-85,110,110,110,-41,-43,-44,-45,-46,110,110,110,110,-19,110,-81,110,-41,110,-43,-44,-45,-46,110,110,110,110,-29,-83,-60,-60,-84,-82,-41,110,110,-41,110,110,-51,-52,-53,-54,-55,-56,-57,-58,]),'MOREEQ':([46,56,58,60,61,68,69,70,71,72,73,74,75,76,77,78,89,91,115,118,119,121,122,125,126,128,129,141,142,143,148,152,154,156,157,158,159,160,161,162,163,187,188,193,194,209,211,214,215,216,217,218,219,220,221,235,236,237,238,239,240,245,246,248,250,254,256,262,263,264,265,266,267,268,269,],[-27,-39,-35,-36,111,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,-27,-28,-62,-61,111,-36,-39,-27,111,176,111,-20,-85,111,111,111,-41,-43,-44,-45,-46,111,111,111,111,-19,111,-81,111,-41,111,-43,-44,-45,-46,111,111,111,111,-29,-83,-60,-60,-84,-82,-41,111,111,-41,111,111,-51,-52,-53,-54,-55,-56,-57,-58,]),'LESSEQ':([46,56,58,60,61,68,69,70,71,72,73,74,75,76,77,78,89,91,115,118,119,121,122,125,126,128,129,141,142,143,148,152,154,156,157,158,159,160,161,162,163,187,188,193,194,209,211,214,215,216,217,218,219,220,221,235,236,237,238,239,240,245,246,248,250,254,256,262,263,264,265,266,267,268,269,],[-27,-39,-35,-36,112,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,-27,-28,-62,-61,112,-36,-39,-27,112,177,112,-20,-85,112,112,112,-41,-43,-44,-45,-46,112,112,112,112,-19,112,-81,112,-41,112,-43,-44,-45,-46,112,112,112,112,-29,-83,-60,-60,-84,-82,-41,112,112,-41,112,112,-51,-52,-53,-54,-55,-56,-57,-58,]),'do':([58,68,69,70,71,72,73,74,75,76,77,78,89,91,115,118,119,120,121,122,125,126,127,141,142,156,157,158,159,160,161,162,163,187,193,209,211,235,236,239,240,262,263,264,265,266,267,268,269,],[-35,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,-27,-28,-62,-61,164,166,-36,-39,-27,168,169,-20,-85,-43,-44,-45,-46,-47,-48,-49,-50,-19,-81,-41,-42,-29,-83,-84,-82,-51,-52,-53,-54,-55,-56,-57,-58,]),'RRNDBRACKET':([58,68,69,70,71,72,73,74,75,76,77,78,88,89,90,91,115,118,121,122,125,139,140,141,142,156,157,158,159,160,161,162,163,187,193,209,211,214,215,216,217,218,219,220,221,235,236,239,240,262,263,264,265,266,267,268,269,],[-35,-34,-37,-38,-60,-63,-64,-65,-66,-67,-40,-59,-26,-27,141,-28,-62,-61,-36,-39,-27,-25,187,-20,-85,-43,-44,-45,-46,-47,-48,-49,-50,-19,-81,-41,-42,262,263,264,265,266,267,268,269,-29,-83,-84,-82,-51,-52,-53,-54,-55,-56,-57,-58,]),'end':([145,178,179,180,181,182,183,184,],[195,223,225,227,228,230,232,234,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'functions':([0,],[2,]),'function':([0,2,],[3,9,]),'type':([0,2,13,14,25,37,38,39,40,41,42,43,44,59,102,146,208,210,212,213,],[4,4,15,15,15,45,45,45,45,45,45,45,45,102,151,45,45,45,45,45,]),'parameters':([13,14,25,],[16,21,32,]),'parameter':([13,14,25,],[18,18,18,]),'empty':([13,14,25,37,38,39,40,41,42,43,44,146,208,210,212,213,],[19,19,19,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'statements':([37,38,39,40,41,42,43,44,208,210,212,213,],[47,79,80,81,82,83,84,85,258,259,260,261,]),'statement':([37,38,39,40,41,42,43,44,146,208,210,212,213,],[49,49,49,49,49,49,49,49,197,49,49,49,49,]),'declaration':([37,38,39,40,41,42,43,44,146,208,210,212,213,],[51,51,51,51,51,51,51,51,51,51,51,51,51,]),'assignment':([37,38,39,40,41,42,43,44,146,208,210,212,213,],[52,52,52,52,52,52,52,52,52,52,52,52,52,]),'conversion':([37,38,39,40,41,42,43,44,146,208,210,212,213,],[53,53,53,53,53,53,53,53,53,53,53,53,53,]),'CHECK':([37,38,39,40,41,42,43,44,146,208,210,212,213,],[54,54,54,54,54,54,54,54,54,54,54,54,54,]),'UNTIL':([37,38,39,40,41,42,43,44,146,208,210,212,213,],[55,55,55,55,55,55,55,55,55,55,55,55,55,]),'function_call':([37,38,39,40,41,42,43,44,64,65,66,67,92,95,103,105,106,107,108,109,110,111,112,143,144,146,167,170,171,172,173,174,175,176,177,190,191,200,201,206,207,208,210,212,213,],[56,56,56,56,56,56,56,56,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,56,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,56,56,56,56,]),'RETURN':([37,38,39,40,41,42,43,44,146,208,210,212,213,],[57,57,57,57,57,57,57,57,57,57,57,57,57,]),'decimal_expression':([37,38,39,40,41,42,43,44,64,65,66,67,92,95,103,105,106,107,108,109,110,111,112,138,143,144,146,167,170,171,172,173,174,175,176,177,190,191,200,201,206,207,208,210,212,213,249,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,185,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,283,]),'variant':([37,38,39,40,41,42,43,44,45,64,65,66,67,88,90,92,95,96,103,104,105,106,107,108,109,110,111,112,143,144,146,151,165,167,170,171,172,173,174,175,176,177,190,191,198,199,200,201,204,205,206,207,208,210,212,213,],[60,60,60,60,60,60,60,60,88,121,121,121,121,88,88,121,121,150,121,154,121,121,121,121,121,121,121,121,121,121,60,88,209,121,121,121,121,121,121,121,121,121,121,121,243,245,121,121,250,252,121,121,60,60,60,60,]),'expression':([37,38,39,40,41,42,43,44,64,65,66,67,92,95,103,105,106,107,108,109,110,111,112,143,144,146,167,170,171,172,173,174,175,176,177,190,191,200,201,206,207,208,210,212,213,],[61,61,61,61,61,61,61,61,119,126,128,129,143,148,152,156,157,158,159,160,161,162,163,188,194,61,211,214,215,216,217,218,219,220,221,156,157,246,248,254,256,61,61,61,61,]),'math_expression':([37,38,39,40,41,42,43,44,64,65,66,67,92,95,103,105,106,107,108,109,110,111,112,143,144,146,167,170,171,172,173,174,175,176,177,190,191,200,201,206,207,208,210,212,213,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'robot_command':([37,38,39,40,41,42,43,44,64,65,66,67,92,95,103,105,106,107,108,109,110,111,112,143,144,146,167,170,171,172,173,174,175,176,177,190,191,200,201,206,207,208,210,212,213,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'ext_assig':([37,38,39,40,41,42,43,44,64,65,66,67,92,95,103,105,106,107,108,109,110,111,112,143,144,146,167,170,171,172,173,174,175,176,177,190,191,200,201,206,207,208,210,212,213,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'decimal_const':([37,38,39,40,41,42,43,44,62,63,64,65,66,67,92,95,103,105,106,107,108,109,110,111,112,123,124,138,143,144,146,167,170,171,172,173,174,175,176,177,190,191,200,201,206,207,208,210,212,213,249,],[71,71,71,71,71,71,71,71,115,118,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,118,115,71,71,71,71,71,71,71,71,71,71,71,71,71,237,238,71,71,71,71,71,71,71,71,71,]),'assig':([37,38,39,40,41,42,43,44,64,65,66,67,92,95,103,105,106,107,108,109,110,111,112,143,144,146,167,170,171,172,173,174,175,176,177,190,191,200,201,206,207,208,210,212,213,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'variants':([45,88,90,151,],[86,139,140,202,]),'indices':([46,89,125,],[91,91,91,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> functions','program',1,'p_program','parser.py',27),
  ('functions -> functions function','functions',2,'p_functions','parser.py',32),
  ('functions -> function','functions',1,'p_functions','parser.py',33),
  ('function -> type NAME LSQBRACKET parameters RSQBRACKET begin NEWLINE statements DOT NEWLINE end NEWLINE','function',12,'p_function','parser.py',40),
  ('statements -> statements COMMA NEWLINE statement','statements',4,'p_statements','parser.py',47),
  ('statements -> statement','statements',1,'p_statements','parser.py',48),
  ('statement -> empty','statement',1,'p_statement','parser.py',55),
  ('statement -> declaration','statement',1,'p_statement','parser.py',56),
  ('statement -> assignment','statement',1,'p_statement','parser.py',57),
  ('statement -> conversion','statement',1,'p_statement','parser.py',58),
  ('statement -> CHECK','statement',1,'p_statement','parser.py',59),
  ('statement -> UNTIL','statement',1,'p_statement','parser.py',60),
  ('statement -> function_call','statement',1,'p_statement','parser.py',61),
  ('statement -> RETURN','statement',1,'p_statement','parser.py',62),
  ('parameters -> parameter COMMA parameters','parameters',3,'p_parameters','parser.py',67),
  ('parameters -> parameter','parameters',1,'p_parameters','parser.py',68),
  ('parameter -> type NAME','parameter',2,'p_parameter','parser.py',75),
  ('parameter -> empty','parameter',1,'p_parameter','parser.py',76),
  ('function_call -> NAME LRNDBRACKET variants RRNDBRACKET','function_call',4,'p_function_call','parser.py',83),
  ('function_call -> NAME LRNDBRACKET RRNDBRACKET','function_call',3,'p_function_call','parser.py',84),
  ('RETURN -> return expression','RETURN',2,'p_RETURN','parser.py',93),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',98),
  ('declaration -> type variants LASIGNMENT decimal_expression','declaration',4,'p_declaration','parser.py',102),
  ('declaration -> field type type variants LASIGNMENT decimal_expression','declaration',6,'p_declaration','parser.py',103),
  ('variants -> variant variants','variants',2,'p_variants','parser.py',115),
  ('variants -> variant','variants',1,'p_variants','parser.py',116),
  ('variant -> NAME','variant',1,'p_variant','parser.py',123),
  ('variant -> NAME indices','variant',2,'p_variant','parser.py',124),
  ('indices -> LSQBRACKET expression expression RSQBRACKET','indices',4,'p_indices','parser.py',131),
  ('type -> tiny','type',1,'p_type','parser.py',136),
  ('type -> small','type',1,'p_type','parser.py',137),
  ('type -> normal','type',1,'p_type','parser.py',138),
  ('type -> big','type',1,'p_type','parser.py',139),
  ('expression -> math_expression','expression',1,'p_expression','parser.py',144),
  ('expression -> decimal_expression','expression',1,'p_expression','parser.py',145),
  ('expression -> variant','expression',1,'p_expression','parser.py',146),
  ('expression -> robot_command','expression',1,'p_expression','parser.py',147),
  ('expression -> ext_assig','expression',1,'p_expression','parser.py',148),
  ('expression -> function_call','expression',1,'p_expression','parser.py',149),
  ('ext_assig -> assig','ext_assig',1,'p_ext_assig','parser.py',156),
  ('assig -> expression RASIGNMENT variant','assig',3,'p_assig','parser.py',160),
  ('assig -> variant LASIGNMENT expression','assig',3,'p_assig','parser.py',161),
  ('math_expression -> expression PLUS expression','math_expression',3,'p_math_expression','parser.py',165),
  ('math_expression -> expression MINUS expression','math_expression',3,'p_math_expression','parser.py',166),
  ('math_expression -> expression MULT expression','math_expression',3,'p_math_expression','parser.py',167),
  ('math_expression -> expression DIV expression','math_expression',3,'p_math_expression','parser.py',168),
  ('math_expression -> expression MORE expression','math_expression',3,'p_math_expression','parser.py',169),
  ('math_expression -> expression LESS expression','math_expression',3,'p_math_expression','parser.py',170),
  ('math_expression -> expression MOREEQ expression','math_expression',3,'p_math_expression','parser.py',171),
  ('math_expression -> expression LESSEQ expression','math_expression',3,'p_math_expression','parser.py',172),
  ('math_expression -> LRNDBRACKET expression PLUS expression RRNDBRACKET','math_expression',5,'p_math_expression','parser.py',173),
  ('math_expression -> LRNDBRACKET expression MINUS expression RRNDBRACKET','math_expression',5,'p_math_expression','parser.py',174),
  ('math_expression -> LRNDBRACKET expression MULT expression RRNDBRACKET','math_expression',5,'p_math_expression','parser.py',175),
  ('math_expression -> LRNDBRACKET expression DIV expression RRNDBRACKET','math_expression',5,'p_math_expression','parser.py',176),
  ('math_expression -> LRNDBRACKET expression MORE expression RRNDBRACKET','math_expression',5,'p_math_expression','parser.py',177),
  ('math_expression -> LRNDBRACKET expression LESS expression RRNDBRACKET','math_expression',5,'p_math_expression','parser.py',178),
  ('math_expression -> LRNDBRACKET expression MOREEQ expression RRNDBRACKET','math_expression',5,'p_math_expression','parser.py',179),
  ('math_expression -> LRNDBRACKET expression LESSEQ expression RRNDBRACKET','math_expression',5,'p_math_expression','parser.py',180),
  ('decimal_const -> DECIMAL','decimal_const',1,'p_decimal_const','parser.py',188),
  ('decimal_expression -> decimal_const','decimal_expression',1,'p_decimal_expression','parser.py',192),
  ('decimal_expression -> PLUS decimal_const','decimal_expression',2,'p_decimal_expression','parser.py',193),
  ('decimal_expression -> MINUS decimal_const','decimal_expression',2,'p_decimal_expression','parser.py',194),
  ('robot_command -> rl','robot_command',1,'p_robot_command','parser.py',201),
  ('robot_command -> rr','robot_command',1,'p_robot_command','parser.py',202),
  ('robot_command -> go','robot_command',1,'p_robot_command','parser.py',203),
  ('robot_command -> sonar','robot_command',1,'p_robot_command','parser.py',204),
  ('robot_command -> compass','robot_command',1,'p_robot_command','parser.py',205),
  ('assignment -> variant LASIGNMENT expression','assignment',3,'p_assignment','parser.py',209),
  ('assignment -> expression RASIGNMENT variant','assignment',3,'p_assignment','parser.py',210),
  ('assignment -> variant LASIGNMENT expression RASIGNMENT variant','assignment',5,'p_assignment','parser.py',211),
  ('assignment -> expression RASIGNMENT variant LASIGNMENT expression','assignment',5,'p_assignment','parser.py',212),
  ('conversion -> MINUS NAME','conversion',2,'p_conversion','parser.py',222),
  ('conversion -> PLUS NAME','conversion',2,'p_conversion','parser.py',223),
  ('UNTIL -> until expression do NEWLINE statements DOT','UNTIL',6,'p_UNTIL','parser.py',227),
  ('CHECK -> check expression do NEWLINE statements DOT','CHECK',6,'p_CHECK','parser.py',231),
  ('declaration -> type error','declaration',2,'p_decl_error','parser.py',246),
  ('declaration -> type variants LASIGNMENT error','declaration',4,'p_decl_error','parser.py',247),
  ('declaration -> field type type error','declaration',4,'p_decl_error','parser.py',248),
  ('declaration -> field type type variants LASIGNMENT error','declaration',6,'p_decl_error','parser.py',249),
  ('declaration -> declaration error','declaration',2,'p_decl_error','parser.py',250),
  ('indices -> LSQBRACKET error RSQBRACKET','indices',3,'p_indices_error','parser.py',259),
  ('indices -> LSQBRACKET error expression RSQBRACKET','indices',4,'p_indices_error','parser.py',260),
  ('indices -> LSQBRACKET expression error RSQBRACKET','indices',4,'p_indices_error','parser.py',261),
  ('indices -> LSQBRACKET error error RSQBRACKET','indices',4,'p_indices_error','parser.py',262),
  ('indices -> indices error','indices',2,'p_indices_error','parser.py',263),
  ('assignment -> variant LASIGNMENT error','assignment',3,'p_assignment_error','parser.py',268),
  ('assignment -> error LASIGNMENT expression','assignment',3,'p_assignment_error','parser.py',269),
  ('assignment -> error RASIGNMENT variant','assignment',3,'p_assignment_error','parser.py',270),
  ('assignment -> expression RASIGNMENT error','assignment',3,'p_assignment_error','parser.py',271),
  ('assignment -> error LASIGNMENT expression RASIGNMENT variant','assignment',5,'p_assignment_error','parser.py',272),
  ('assignment -> variant LASIGNMENT error RASIGNMENT variant','assignment',5,'p_assignment_error','parser.py',273),
  ('assignment -> variant LASIGNMENT expression RASIGNMENT error','assignment',5,'p_assignment_error','parser.py',274),
  ('assignment -> error LASIGNMENT error RASIGNMENT variant','assignment',5,'p_assignment_error','parser.py',275),
  ('assignment -> variant LASIGNMENT error RASIGNMENT error','assignment',5,'p_assignment_error','parser.py',276),
  ('assignment -> error LASIGNMENT expression RASIGNMENT error','assignment',5,'p_assignment_error','parser.py',277),
  ('assignment -> error RASIGNMENT variant LASIGNMENT expression','assignment',5,'p_assignment_error','parser.py',278),
  ('assignment -> expression RASIGNMENT error LASIGNMENT expression','assignment',5,'p_assignment_error','parser.py',279),
  ('assignment -> expression RASIGNMENT variant LASIGNMENT error','assignment',5,'p_assignment_error','parser.py',280),
  ('assignment -> error RASIGNMENT error LASIGNMENT expression','assignment',5,'p_assignment_error','parser.py',281),
  ('assignment -> expression RASIGNMENT error LASIGNMENT error','assignment',5,'p_assignment_error','parser.py',282),
  ('assignment -> error RASIGNMENT variant LASIGNMENT error','assignment',5,'p_assignment_error','parser.py',283),
  ('conversion -> MINUS error','conversion',2,'p_conversion_error','parser.py',288),
  ('conversion -> PLUS error','conversion',2,'p_conversion_error','parser.py',289),
  ('conversion -> conversion error','conversion',2,'p_conversion_error','parser.py',290),
  ('UNTIL -> until error do NEWLINE statements DOT','UNTIL',6,'p_UNTIL_error','parser.py',297),
  ('UNTIL -> UNTIL error','UNTIL',2,'p_UNTIL_error','parser.py',298),
  ('CHECK -> check error do NEWLINE statements DOT','CHECK',6,'p_CHECK_error','parser.py',309),
  ('CHECK -> CHECK error','CHECK',2,'p_CHECK_error','parser.py',310),
  ('function -> type error LSQBRACKET parameters RSQBRACKET begin NEWLINE statements DOT NEWLINE end NEWLINE','function',12,'p_function_error','parser.py',321),
  ('function -> type NAME LSQBRACKET error RSQBRACKET begin NEWLINE statements DOT NEWLINE end NEWLINE','function',12,'p_function_error','parser.py',322),
  ('function -> type NAME LSQBRACKET parameters RSQBRACKET error NEWLINE statements DOT NEWLINE end NEWLINE','function',12,'p_function_error','parser.py',323),
  ('function -> type NAME LSQBRACKET parameters RSQBRACKET begin NEWLINE statements DOT NEWLINE error NEWLINE','function',12,'p_function_error','parser.py',324),
  ('function -> type error LSQBRACKET error RSQBRACKET begin NEWLINE statements DOT NEWLINE end NEWLINE','function',12,'p_function_error','parser.py',325),
  ('function -> type NAME LSQBRACKET error RSQBRACKET error NEWLINE statements DOT NEWLINE end NEWLINE','function',12,'p_function_error','parser.py',326),
  ('function -> type NAME LSQBRACKET parameters RSQBRACKET error NEWLINE statements DOT NEWLINE error NEWLINE','function',12,'p_function_error','parser.py',327),
  ('function -> type error LSQBRACKET parameters RSQBRACKET begin NEWLINE statements DOT NEWLINE error NEWLINE','function',12,'p_function_error','parser.py',328),
  ('function -> type error LSQBRACKET parameters RSQBRACKET error NEWLINE statements DOT NEWLINE end NEWLINE','function',12,'p_function_error','parser.py',329),
  ('function -> type NAME LSQBRACKET error RSQBRACKET begin NEWLINE statements DOT NEWLINE error NEWLINE','function',12,'p_function_error','parser.py',330),
  ('function -> type error LSQBRACKET error RSQBRACKET error NEWLINE statements DOT NEWLINE end NEWLINE','function',12,'p_function_error','parser.py',331),
  ('function -> type NAME LSQBRACKET error RSQBRACKET error NEWLINE statements DOT NEWLINE error NEWLINE','function',12,'p_function_error','parser.py',332),
  ('function -> type error LSQBRACKET parameters RSQBRACKET error NEWLINE statements DOT NEWLINE error NEWLINE','function',12,'p_function_error','parser.py',333),
  ('function -> type error LSQBRACKET error RSQBRACKET begin NEWLINE statements DOT NEWLINE error NEWLINE','function',12,'p_function_error','parser.py',334),
  ('function -> function error','function',2,'p_function_error','parser.py',335),
  ('RETURN -> return error','RETURN',2,'p_RETURN_error','parser.py',348),
  ('RETURN -> RETURN error','RETURN',2,'p_RETURN_error','parser.py',349),
]
