
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA DECIMAL DIV DOT LASIGNMENT LESS LESSEQ LRNDBRACKET LSQBRACKET MINUS MORE MOREEQ MULT NAME NEWLINE PLUS RASIGNMENT RRNDBRACKET RSQBRACKET begin big check compass do end field go normal return rl rr small sonar tiny untilprogram : statementsstatements : statements statement\n                        | statementstatement : empty NEWLINE\n                        | declaration NEWLINE\n                        | assignment NEWLINE\n                        | conversion NEWLINE\n                        | CHECK NEWLINE\n                        | UNTIL NEWLINE\n                        | go NEWLINE\n                        | rr NEWLINE\n                        | rl NEWLINE\n                        | function NEWLINE\n                        | function_call NEWLINEempty : declaration : type variants\n                        | type variants LASIGNMENT DECIMAL\n                        | field type type variants\n                        | field type type variants LASIGNMENT DECIMALvariants : variants variant\n                        | variantvariant : NAMEindices : LSQBRACKET expression expression RSQBRACKETtype : tiny\n                    | small\n                    | normal\n                    | bigexpression : math_expression\n                        | decimal_const\n                        | variant\n                        | expression RASIGNMENT variant\n                        | variant LASIGNMENT expression\n                        | function_callmath_expression : expression PLUS expression\n                            | LRNDBRACKET expression PLUS expression RRNDBRACKET\n                            | expression MINUS expression\n                            | LRNDBRACKET expression MINUS expression RRNDBRACKET\n                            | expression MULT expression\n                            | expression DIV expression\n                            | expression MORE expression\n                            | expression LESS expression\n                            | expression MOREEQ expression\n                            | expression LESSEQ expressiondecimal_const : DECIMALassignment : variant LASIGNMENT expression\n                        | expression RASIGNMENT variant\n                        | variant indices LASIGNMENT expression\n                        | expression RASIGNMENT variant indices\n                        | variant LASIGNMENT expression RASIGNMENT variant\n                        | expression RASIGNMENT variant LASIGNMENT expressionconversion : MINUS variant\n                        | PLUS variantUNTIL : until math_expression do NEWLINE statements CHECK : check math_expression do NEWLINE statements function : type NAME LSQBRACKET parameters RSQBRACKET begin NEWLINE func_statements endfunc_statements : func_statements func_statement\n                        | func_statementfunc_statement : empty NEWLINE\n                        | declaration NEWLINE\n                        | assignment NEWLINE\n                        | conversion NEWLINE\n                        | CHECK NEWLINE\n                        | UNTIL NEWLINE\n                        | go NEWLINE\n                        | rr NEWLINE\n                        | rl NEWLINE\n                        | function_call NEWLINE\n                        | RETURN NEWLINEparameters : parameters COMMA parameter\n                        | parameterparameter : type NAME function_call : NAME LRNDBRACKET variants RRNDBRACKET\n                        | NAME LRNDBRACKET RRNDBRACKETRETURN : return expressiondeclaration : type error\n                        | type variants  LASIGNMENT error\n                        | field type type error\n                        | field type type variants LASIGNMENT error\n                        | declaration errorindices : LSQBRACKET error RSQBRACKET\n                    | LSQBRACKET error expression RSQBRACKET\n                    | LSQBRACKET expression error RSQBRACKET\n                    | LSQBRACKET error error RSQBRACKET\n                    | indices errorassignment : variant LASIGNMENT error\n                        | error LASIGNMENT expression\n                        | error RASIGNMENT variant\n                        | expression RASIGNMENT error\n                        | error indices LASIGNMENT expression\n                        | variant indices LASIGNMENT error\n                        | error RASIGNMENT variant indices\n                        | expression RASIGNMENT error indices\n                        | error LASIGNMENT expression RASIGNMENT variant\n                        | variant LASIGNMENT error RASIGNMENT variant\n                        | variant LASIGNMENT expression RASIGNMENT error\n                        | error LASIGNMENT error RASIGNMENT variant\n                        | variant LASIGNMENT error RASIGNMENT error\n                        | error LASIGNMENT expression RASIGNMENT error\n                        | error RASIGNMENT variant LASIGNMENT expression\n                        | expression RASIGNMENT error LASIGNMENT expression\n                        | expression RASIGNMENT variant LASIGNMENT error\n                        | error RASIGNMENT error LASIGNMENT expression\n                        | expression RASIGNMENT error LASIGNMENT error\n                        | error RASIGNMENT variant LASIGNMENT errorconversion : MINUS error\n                        | PLUS error\n                        | conversion errorUNTIL : until error do NEWLINE statements\n                    | UNTIL errorCHECK : check error do NEWLINE statements\n                    | CHECK errorfunction :  type error LSQBRACKET parameters RSQBRACKET begin NEWLINE func_statements end\n                    | type NAME LSQBRACKET error RSQBRACKET begin NEWLINE func_statements end\n                    | type NAME LSQBRACKET parameters RSQBRACKET error NEWLINE func_statements end\n                    | type NAME LSQBRACKET parameters RSQBRACKET begin NEWLINE func_statements error\n                    | type error LSQBRACKET error RSQBRACKET begin NEWLINE func_statements end\n                    | type NAME LSQBRACKET error RSQBRACKET error NEWLINE func_statements end\n                    | type NAME LSQBRACKET parameters RSQBRACKET error NEWLINE func_statements error\n                    | type error LSQBRACKET parameters RSQBRACKET begin NEWLINE func_statements error\n                    | type error LSQBRACKET parameters RSQBRACKET error NEWLINE func_statements end\n                    | type NAME LSQBRACKET error RSQBRACKET begin NEWLINE func_statements error\n                    | type error LSQBRACKET error RSQBRACKET error NEWLINE func_statements end\n                    | type NAME LSQBRACKET error RSQBRACKET error NEWLINE func_statements error\n                    | type error LSQBRACKET parameters RSQBRACKET error NEWLINE func_statements error\n                    | type error LSQBRACKET error RSQBRACKET begin NEWLINE func_statements error\n                    | function error\n                   RETURN : return error\n                    | RETURN error'
    
_lr_action_items = {'go':([0,2,3,33,34,35,37,38,40,42,44,45,46,47,49,150,151,154,155,184,185,186,187,201,202,203,204,205,206,207,208,210,211,224,225,226,227,228,229,230,233,234,235,236,237,238,239,240,241,242,243,244,],[10,10,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,10,10,10,10,10,10,10,10,218,218,218,218,218,218,218,218,218,-57,218,218,218,218,218,218,218,-56,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,]),'rr':([0,2,3,33,34,35,37,38,40,42,44,45,46,47,49,150,151,154,155,184,185,186,187,201,202,203,204,205,206,207,208,210,211,224,225,226,227,228,229,230,233,234,235,236,237,238,239,240,241,242,243,244,],[11,11,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,11,11,11,11,11,11,11,11,219,219,219,219,219,219,219,219,219,-57,219,219,219,219,219,219,219,-56,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,]),'rl':([0,2,3,33,34,35,37,38,40,42,44,45,46,47,49,150,151,154,155,184,185,186,187,201,202,203,204,205,206,207,208,210,211,224,225,226,227,228,229,230,233,234,235,236,237,238,239,240,241,242,243,244,],[12,12,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,12,12,12,12,12,12,12,12,220,220,220,220,220,220,220,220,220,-57,220,220,220,220,220,220,220,-56,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,]),'NEWLINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,24,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,70,71,72,73,74,78,79,80,86,91,93,94,98,99,101,102,103,104,105,106,107,108,109,110,111,112,115,116,118,121,122,129,130,134,136,140,144,145,146,148,150,151,152,153,154,155,156,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,],[-15,-15,-3,34,35,37,38,40,42,44,45,46,47,49,-44,-28,-29,-2,-4,-5,-79,-6,-7,-107,-8,-111,-9,-109,-10,-11,-12,-13,-126,-14,-16,-75,-22,-21,-51,-105,-22,-52,-106,-30,-33,-22,-20,-86,-87,-84,-45,-85,-46,-88,-34,-36,-38,-39,-40,-41,-42,-43,150,151,154,155,-73,-17,-76,-18,-77,-91,-89,-80,-47,-90,-48,-92,-15,-15,-31,-32,-15,-15,-72,-96,-98,-31,-102,-104,-99,-23,-82,-83,-81,-31,-95,-94,-97,-50,-101,-100,-103,-15,-15,-15,-15,-35,-37,201,202,203,204,205,206,207,208,-19,-78,-15,-15,-15,-15,-15,-15,-15,-15,-15,-57,234,235,236,237,238,239,240,241,242,243,244,-15,-15,-15,-15,-15,-15,-15,-75,-122,-56,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-128,-74,-127,-125,-116,-124,-120,-119,-112,-55,-115,-118,-114,-123,-117,-121,-113,]),'field':([0,2,3,33,34,35,37,38,40,42,44,45,46,47,49,150,151,154,155,184,185,186,187,201,202,203,204,205,206,207,208,210,211,224,225,226,227,228,229,230,233,234,235,236,237,238,239,240,241,242,243,244,],[17,17,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-57,17,17,17,17,17,17,17,-56,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,]),'error':([0,2,3,5,7,8,9,13,15,16,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,70,71,72,73,74,78,79,80,85,86,87,88,89,94,96,97,100,103,104,105,106,107,108,109,110,118,121,122,129,130,132,134,135,140,142,143,146,147,148,149,150,151,152,153,154,155,156,160,161,163,164,165,172,173,174,175,184,185,186,187,188,189,199,200,201,202,203,204,205,206,207,208,209,210,211,213,215,216,217,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,],[18,18,-3,36,39,41,43,48,51,-44,71,74,76,-28,82,-24,-25,-26,-27,-29,-2,-4,-5,-79,-6,-7,-107,-8,-111,-9,-109,-10,-11,-12,-13,-126,-14,-16,-75,-22,-21,90,92,94,97,99,94,102,-51,-105,-22,-52,-106,-30,-33,-22,122,-20,124,128,130,-84,138,139,145,-34,-36,-38,-39,-40,-41,-42,-43,-73,-17,-76,-18,-77,167,94,170,-80,177,179,94,181,94,183,18,18,-31,-32,18,18,-72,190,192,196,197,200,-23,-82,-83,-81,18,18,18,18,-35,-37,-19,-78,18,18,18,18,18,18,18,18,231,18,-57,36,39,41,43,245,247,248,250,252,255,256,258,260,-75,-122,-56,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-128,-74,-127,-125,-116,-124,-120,-119,-112,-55,-115,-118,-114,-123,-117,-121,-113,]),'MINUS':([0,2,3,14,16,19,20,24,26,32,33,34,35,37,38,40,42,44,45,46,47,49,72,75,77,78,79,80,81,84,91,96,98,101,103,104,105,106,107,108,109,110,118,136,137,141,144,150,151,152,153,154,155,156,157,158,168,169,171,176,180,182,184,185,186,187,188,189,201,202,203,204,205,206,207,208,210,211,221,224,225,226,227,228,229,230,233,234,235,236,237,238,239,240,241,242,243,244,246,],[21,21,-3,-33,-44,-30,63,-28,-22,-29,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-22,-28,63,-30,-33,-22,-28,120,63,63,63,-31,63,63,63,63,63,63,63,63,-73,63,63,63,63,21,21,-31,63,21,21,-72,63,63,-31,63,63,-31,63,63,21,21,21,21,-35,-37,21,21,21,21,21,21,21,21,21,-57,-33,21,21,21,21,21,21,21,-56,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,63,]),'PLUS':([0,2,3,14,16,19,20,24,26,32,33,34,35,37,38,40,42,44,45,46,47,49,72,75,77,78,79,80,81,84,91,96,98,101,103,104,105,106,107,108,109,110,118,136,137,141,144,150,151,152,153,154,155,156,157,158,168,169,171,176,180,182,184,185,186,187,188,189,201,202,203,204,205,206,207,208,210,211,221,224,225,226,227,228,229,230,233,234,235,236,237,238,239,240,241,242,243,244,246,],[22,22,-3,-33,-44,-30,62,-28,-22,-29,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-22,-28,62,-30,-33,-22,-28,119,62,62,62,-31,62,62,62,62,62,62,62,62,-73,62,62,62,62,22,22,-31,62,22,22,-72,62,62,-31,62,62,-31,62,62,22,22,22,22,-35,-37,22,22,22,22,22,22,22,22,22,-57,-33,22,22,22,22,22,22,22,-56,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,62,]),'check':([0,2,3,33,34,35,37,38,40,42,44,45,46,47,49,150,151,154,155,184,185,186,187,201,202,203,204,205,206,207,208,210,211,224,225,226,227,228,229,230,233,234,235,236,237,238,239,240,241,242,243,244,],[23,23,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-57,23,23,23,23,23,23,23,-56,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,]),'until':([0,2,3,33,34,35,37,38,40,42,44,45,46,47,49,150,151,154,155,184,185,186,187,201,202,203,204,205,206,207,208,210,211,224,225,226,227,228,229,230,233,234,235,236,237,238,239,240,241,242,243,244,],[25,25,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-57,25,25,25,25,25,25,25,-56,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,]),'NAME':([0,2,3,15,16,21,22,23,24,25,27,28,29,30,31,32,33,34,35,37,38,40,42,44,45,46,47,49,50,52,53,55,56,58,59,61,62,63,64,65,66,67,68,69,72,78,79,80,83,86,89,95,96,97,100,103,104,105,106,107,108,109,110,113,114,117,118,119,120,123,129,131,132,133,135,142,143,147,149,150,151,152,153,154,155,156,184,185,186,187,188,189,201,202,203,204,205,206,207,208,209,210,211,223,224,225,226,227,228,229,230,233,234,235,236,237,238,239,240,241,242,243,244,],[26,26,-3,52,-44,72,72,80,-28,80,80,-24,-25,-26,-27,-29,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,72,-22,-21,80,72,80,80,72,80,80,80,80,80,80,80,80,-22,-30,-33,-22,72,-20,72,80,80,80,80,-34,-36,-38,-39,-40,-41,-42,-43,72,80,72,-73,80,80,159,72,72,72,80,80,72,72,80,80,26,26,-31,-32,26,26,-72,26,26,26,26,-35,-37,26,26,26,26,26,26,26,26,72,26,-57,80,26,26,26,26,26,26,26,-56,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,]),'tiny':([0,2,3,17,28,29,30,31,33,34,35,37,38,40,42,44,45,46,47,49,54,87,88,150,151,154,155,162,184,185,186,187,201,202,203,204,205,206,207,208,210,211,224,225,226,227,228,229,230,233,234,235,236,237,238,239,240,241,242,243,244,],[28,28,-3,28,-24,-25,-26,-27,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-57,28,28,28,28,28,28,28,-56,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,]),'small':([0,2,3,17,28,29,30,31,33,34,35,37,38,40,42,44,45,46,47,49,54,87,88,150,151,154,155,162,184,185,186,187,201,202,203,204,205,206,207,208,210,211,224,225,226,227,228,229,230,233,234,235,236,237,238,239,240,241,242,243,244,],[29,29,-3,29,-24,-25,-26,-27,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-57,29,29,29,29,29,29,29,-56,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,]),'normal':([0,2,3,17,28,29,30,31,33,34,35,37,38,40,42,44,45,46,47,49,54,87,88,150,151,154,155,162,184,185,186,187,201,202,203,204,205,206,207,208,210,211,224,225,226,227,228,229,230,233,234,235,236,237,238,239,240,241,242,243,244,],[30,30,-3,30,-24,-25,-26,-27,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-57,30,30,30,30,30,30,30,-56,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,]),'big':([0,2,3,17,28,29,30,31,33,34,35,37,38,40,42,44,45,46,47,49,54,87,88,150,151,154,155,162,184,185,186,187,201,202,203,204,205,206,207,208,210,211,224,225,226,227,228,229,230,233,234,235,236,237,238,239,240,241,242,243,244,],[31,31,-3,31,-24,-25,-26,-27,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-57,31,31,31,31,31,31,31,-56,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,]),'LRNDBRACKET':([0,2,3,16,23,24,25,26,27,32,33,34,35,37,38,40,42,44,45,46,47,49,55,58,59,62,63,64,65,66,67,68,69,72,78,79,80,95,96,97,100,103,104,105,106,107,108,109,110,114,118,119,120,133,135,147,149,150,151,152,153,154,155,156,184,185,186,187,188,189,201,202,203,204,205,206,207,208,210,211,223,224,225,226,227,228,229,230,233,234,235,236,237,238,239,240,241,242,243,244,],[27,27,-3,-44,27,-28,27,83,27,-29,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,27,27,27,27,27,27,27,27,27,27,27,-22,-30,-33,83,27,27,27,27,-34,-36,-38,-39,-40,-41,-42,-43,27,-73,27,27,27,27,27,27,27,27,-31,-32,27,27,-72,27,27,27,27,-35,-37,27,27,27,27,27,27,27,27,27,-57,27,27,27,27,27,27,27,27,-56,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,]),'DECIMAL':([0,2,3,16,23,24,25,27,32,33,34,35,37,38,40,42,44,45,46,47,49,55,58,59,62,63,64,65,66,67,68,69,72,78,79,80,85,95,96,97,100,103,104,105,106,107,108,109,110,114,118,119,120,133,135,147,149,150,151,152,153,154,155,156,165,184,185,186,187,188,189,201,202,203,204,205,206,207,208,210,211,223,224,225,226,227,228,229,230,233,234,235,236,237,238,239,240,241,242,243,244,],[16,16,-3,-44,16,-28,16,16,-29,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,16,16,16,16,16,16,16,16,16,16,16,-22,-30,-33,-22,121,16,16,16,16,-34,-36,-38,-39,-40,-41,-42,-43,16,-73,16,16,16,16,16,16,16,16,-31,-32,16,16,-72,199,16,16,16,16,-35,-37,16,16,16,16,16,16,16,16,16,-57,16,16,16,16,16,16,16,16,-56,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,]),'$end':([1,2,3,33,34,35,37,38,40,42,44,45,46,47,49,],[0,-1,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,]),'RASIGNMENT':([14,16,18,19,20,24,26,32,72,75,77,78,79,80,81,84,90,91,96,98,99,101,103,104,105,106,107,108,109,110,118,136,137,141,144,152,153,156,157,158,168,169,171,176,180,182,188,189,221,246,248,250,252,255,256,258,260,],[-33,-44,56,-30,61,-28,-22,-29,-22,-28,113,-30,-33,-22,-28,113,131,132,113,142,143,-31,113,113,113,113,113,113,113,113,-73,113,113,113,113,-31,113,-72,113,113,-31,113,113,-31,113,113,-35,-37,-33,113,56,56,56,56,56,56,56,]),'MULT':([14,16,19,20,24,26,32,72,75,77,78,79,80,81,84,91,96,98,101,103,104,105,106,107,108,109,110,118,136,137,141,144,152,153,156,157,158,168,169,171,176,180,182,188,189,221,246,],[-33,-44,-30,64,-28,-22,-29,-22,-28,64,-30,-33,-22,-28,64,64,64,64,-31,64,64,64,64,64,64,64,64,-73,64,64,64,64,-31,64,-72,64,64,-31,64,64,-31,64,64,-35,-37,-33,64,]),'DIV':([14,16,19,20,24,26,32,72,75,77,78,79,80,81,84,91,96,98,101,103,104,105,106,107,108,109,110,118,136,137,141,144,152,153,156,157,158,168,169,171,176,180,182,188,189,221,246,],[-33,-44,-30,65,-28,-22,-29,-22,-28,65,-30,-33,-22,-28,65,65,65,65,-31,65,65,65,65,65,65,65,65,-73,65,65,65,65,-31,65,-72,65,65,-31,65,65,-31,65,65,-35,-37,-33,65,]),'MORE':([14,16,19,20,24,26,32,72,75,77,78,79,80,81,84,91,96,98,101,103,104,105,106,107,108,109,110,118,136,137,141,144,152,153,156,157,158,168,169,171,176,180,182,188,189,221,246,],[-33,-44,-30,66,-28,-22,-29,-22,-28,66,-30,-33,-22,-28,66,66,66,66,-31,66,66,66,66,66,66,66,66,-73,66,66,66,66,-31,66,-72,66,66,-31,66,66,-31,66,66,-35,-37,-33,66,]),'LESS':([14,16,19,20,24,26,32,72,75,77,78,79,80,81,84,91,96,98,101,103,104,105,106,107,108,109,110,118,136,137,141,144,152,153,156,157,158,168,169,171,176,180,182,188,189,221,246,],[-33,-44,-30,67,-28,-22,-29,-22,-28,67,-30,-33,-22,-28,67,67,67,67,-31,67,67,67,67,67,67,67,67,-73,67,67,67,67,-31,67,-72,67,67,-31,67,67,-31,67,67,-35,-37,-33,67,]),'MOREEQ':([14,16,19,20,24,26,32,72,75,77,78,79,80,81,84,91,96,98,101,103,104,105,106,107,108,109,110,118,136,137,141,144,152,153,156,157,158,168,169,171,176,180,182,188,189,221,246,],[-33,-44,-30,68,-28,-22,-29,-22,-28,68,-30,-33,-22,-28,68,68,68,68,-31,68,68,68,68,68,68,68,68,-73,68,68,68,68,-31,68,-72,68,68,-31,68,68,-31,68,68,-35,-37,-33,68,]),'LESSEQ':([14,16,19,20,24,26,32,72,75,77,78,79,80,81,84,91,96,98,101,103,104,105,106,107,108,109,110,118,136,137,141,144,152,153,156,157,158,168,169,171,176,180,182,188,189,221,246,],[-33,-44,-30,69,-28,-22,-29,-22,-28,69,-30,-33,-22,-28,69,69,69,69,-31,69,69,69,69,69,69,69,69,-73,69,69,69,69,-31,69,-72,69,69,-31,69,69,-31,69,69,-35,-37,-33,69,]),'do':([16,24,32,72,75,76,78,79,80,81,82,103,104,105,106,107,108,109,110,118,152,153,156,188,189,],[-44,-28,-29,-22,111,112,-30,-33,-22,115,116,-34,-36,-38,-39,-40,-41,-42,-43,-73,-31,-32,-72,-35,-37,]),'RSQBRACKET':([16,24,32,72,78,79,80,97,103,104,105,106,107,108,109,110,118,124,125,126,127,128,137,138,139,141,152,153,156,159,188,189,194,],[-44,-28,-29,-22,-30,-33,-22,140,-34,-36,-38,-39,-40,-41,-42,-43,-73,160,161,-70,163,164,172,173,174,175,-31,-32,-72,-71,-35,-37,-69,]),'RRNDBRACKET':([16,24,32,53,72,78,79,80,83,86,103,104,105,106,107,108,109,110,117,118,152,153,156,157,158,188,189,],[-44,-28,-29,-21,-22,-30,-33,-22,118,-20,-34,-36,-38,-39,-40,-41,-42,-43,156,-73,-31,-32,-72,188,189,-35,-37,]),'LASIGNMENT':([18,19,26,50,52,53,57,60,72,78,80,86,92,93,94,101,102,129,140,172,173,174,175,248,250,252,255,256,258,260,],[55,59,-22,85,-22,-21,95,100,-22,114,-22,-20,133,135,-84,147,149,165,-80,-23,-82,-83,-81,55,55,55,55,55,55,55,]),'LSQBRACKET':([18,19,26,51,52,72,93,101,102,248,250,252,255,256,258,260,],[58,58,-22,87,88,-22,58,58,58,58,58,58,58,58,58,58,]),'COMMA':([125,126,127,159,194,],[162,-70,162,-71,-69,]),'begin':([160,161,163,164,],[191,193,195,198,]),'return':([201,202,203,204,205,206,207,208,210,211,224,225,226,227,228,229,230,233,234,235,236,237,238,239,240,241,242,243,244,],[223,223,223,223,223,223,223,223,223,-57,223,223,223,223,223,223,223,-56,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,]),'end':([210,211,224,225,226,227,228,229,230,233,234,235,236,237,238,239,240,241,242,243,244,],[232,-57,249,251,253,254,257,259,261,-56,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,150,151,154,155,],[2,184,185,186,187,]),'statement':([0,2,150,151,154,155,184,185,186,187,],[3,33,3,3,3,3,33,33,33,33,]),'empty':([0,2,150,151,154,155,184,185,186,187,201,202,203,204,205,206,207,208,210,224,225,226,227,228,229,230,],[4,4,4,4,4,4,4,4,4,4,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,]),'declaration':([0,2,150,151,154,155,184,185,186,187,201,202,203,204,205,206,207,208,210,224,225,226,227,228,229,230,],[5,5,5,5,5,5,5,5,5,5,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,]),'assignment':([0,2,150,151,154,155,184,185,186,187,201,202,203,204,205,206,207,208,210,224,225,226,227,228,229,230,],[6,6,6,6,6,6,6,6,6,6,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,]),'conversion':([0,2,150,151,154,155,184,185,186,187,201,202,203,204,205,206,207,208,210,224,225,226,227,228,229,230,],[7,7,7,7,7,7,7,7,7,7,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,]),'CHECK':([0,2,150,151,154,155,184,185,186,187,201,202,203,204,205,206,207,208,210,224,225,226,227,228,229,230,],[8,8,8,8,8,8,8,8,8,8,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,]),'UNTIL':([0,2,150,151,154,155,184,185,186,187,201,202,203,204,205,206,207,208,210,224,225,226,227,228,229,230,],[9,9,9,9,9,9,9,9,9,9,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,]),'function':([0,2,150,151,154,155,184,185,186,187,],[13,13,13,13,13,13,13,13,13,13,]),'function_call':([0,2,23,25,27,55,58,59,62,63,64,65,66,67,68,69,95,96,97,100,114,119,120,133,135,147,149,150,151,154,155,184,185,186,187,201,202,203,204,205,206,207,208,210,223,224,225,226,227,228,229,230,],[14,14,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,14,14,14,14,14,14,14,14,221,221,221,221,221,221,221,221,221,79,221,221,221,221,221,221,221,]),'type':([0,2,17,54,87,88,150,151,154,155,162,184,185,186,187,201,202,203,204,205,206,207,208,210,224,225,226,227,228,229,230,],[15,15,54,89,123,123,15,15,15,15,123,15,15,15,15,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,]),'variant':([0,2,15,21,22,23,25,27,50,55,56,58,59,61,62,63,64,65,66,67,68,69,83,89,95,96,97,100,113,114,117,119,120,129,131,132,133,135,142,143,147,149,150,151,154,155,184,185,186,187,201,202,203,204,205,206,207,208,209,210,223,224,225,226,227,228,229,230,],[19,19,53,70,73,78,78,78,86,78,93,78,78,101,78,78,78,78,78,78,78,78,53,53,78,78,78,78,152,78,86,78,78,86,166,168,78,78,176,178,78,78,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,53,19,78,19,19,19,19,19,19,19,]),'expression':([0,2,23,25,27,55,58,59,62,63,64,65,66,67,68,69,95,96,97,100,114,119,120,133,135,147,149,150,151,154,155,184,185,186,187,201,202,203,204,205,206,207,208,210,223,224,225,226,227,228,229,230,],[20,20,77,77,84,91,96,98,103,104,105,106,107,108,109,110,136,137,141,144,153,157,158,169,171,180,182,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,246,20,20,20,20,20,20,20,]),'math_expression':([0,2,23,25,27,55,58,59,62,63,64,65,66,67,68,69,95,96,97,100,114,119,120,133,135,147,149,150,151,154,155,184,185,186,187,201,202,203,204,205,206,207,208,210,223,224,225,226,227,228,229,230,],[24,24,75,81,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'decimal_const':([0,2,23,25,27,55,58,59,62,63,64,65,66,67,68,69,95,96,97,100,114,119,120,133,135,147,149,150,151,154,155,184,185,186,187,201,202,203,204,205,206,207,208,210,223,224,225,226,227,228,229,230,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'variants':([15,83,89,209,],[50,117,129,50,]),'indices':([18,19,93,101,102,248,250,252,255,256,258,260,],[57,60,134,146,148,57,57,57,57,57,57,57,]),'parameters':([87,88,],[125,127,]),'parameter':([87,88,162,],[126,126,194,]),'func_statements':([201,202,203,204,205,206,207,208,],[210,224,225,226,227,228,229,230,]),'func_statement':([201,202,203,204,205,206,207,208,210,224,225,226,227,228,229,230,],[211,211,211,211,211,211,211,211,233,233,233,233,233,233,233,233,]),'RETURN':([201,202,203,204,205,206,207,208,210,224,225,226,227,228,229,230,],[222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','parser.py',27),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',31),
  ('statements -> statement','statements',1,'p_statements','parser.py',32),
  ('statement -> empty NEWLINE','statement',2,'p_statement','parser.py',39),
  ('statement -> declaration NEWLINE','statement',2,'p_statement','parser.py',40),
  ('statement -> assignment NEWLINE','statement',2,'p_statement','parser.py',41),
  ('statement -> conversion NEWLINE','statement',2,'p_statement','parser.py',42),
  ('statement -> CHECK NEWLINE','statement',2,'p_statement','parser.py',43),
  ('statement -> UNTIL NEWLINE','statement',2,'p_statement','parser.py',44),
  ('statement -> go NEWLINE','statement',2,'p_statement','parser.py',45),
  ('statement -> rr NEWLINE','statement',2,'p_statement','parser.py',46),
  ('statement -> rl NEWLINE','statement',2,'p_statement','parser.py',47),
  ('statement -> function NEWLINE','statement',2,'p_statement','parser.py',48),
  ('statement -> function_call NEWLINE','statement',2,'p_statement','parser.py',49),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',53),
  ('declaration -> type variants','declaration',2,'p_declaration','parser.py',57),
  ('declaration -> type variants LASIGNMENT DECIMAL','declaration',4,'p_declaration','parser.py',58),
  ('declaration -> field type type variants','declaration',4,'p_declaration','parser.py',59),
  ('declaration -> field type type variants LASIGNMENT DECIMAL','declaration',6,'p_declaration','parser.py',60),
  ('variants -> variants variant','variants',2,'p_variants','parser.py',81),
  ('variants -> variant','variants',1,'p_variants','parser.py',82),
  ('variant -> NAME','variant',1,'p_variant','parser.py',89),
  ('indices -> LSQBRACKET expression expression RSQBRACKET','indices',4,'p_indices','parser.py',93),
  ('type -> tiny','type',1,'p_type','parser.py',98),
  ('type -> small','type',1,'p_type','parser.py',99),
  ('type -> normal','type',1,'p_type','parser.py',100),
  ('type -> big','type',1,'p_type','parser.py',101),
  ('expression -> math_expression','expression',1,'p_expression','parser.py',105),
  ('expression -> decimal_const','expression',1,'p_expression','parser.py',106),
  ('expression -> variant','expression',1,'p_expression','parser.py',107),
  ('expression -> expression RASIGNMENT variant','expression',3,'p_expression','parser.py',108),
  ('expression -> variant LASIGNMENT expression','expression',3,'p_expression','parser.py',109),
  ('expression -> function_call','expression',1,'p_expression','parser.py',110),
  ('math_expression -> expression PLUS expression','math_expression',3,'p_math_expression','parser.py',114),
  ('math_expression -> LRNDBRACKET expression PLUS expression RRNDBRACKET','math_expression',5,'p_math_expression','parser.py',115),
  ('math_expression -> expression MINUS expression','math_expression',3,'p_math_expression','parser.py',116),
  ('math_expression -> LRNDBRACKET expression MINUS expression RRNDBRACKET','math_expression',5,'p_math_expression','parser.py',117),
  ('math_expression -> expression MULT expression','math_expression',3,'p_math_expression','parser.py',118),
  ('math_expression -> expression DIV expression','math_expression',3,'p_math_expression','parser.py',119),
  ('math_expression -> expression MORE expression','math_expression',3,'p_math_expression','parser.py',120),
  ('math_expression -> expression LESS expression','math_expression',3,'p_math_expression','parser.py',121),
  ('math_expression -> expression MOREEQ expression','math_expression',3,'p_math_expression','parser.py',122),
  ('math_expression -> expression LESSEQ expression','math_expression',3,'p_math_expression','parser.py',123),
  ('decimal_const -> DECIMAL','decimal_const',1,'p_decimal_const','parser.py',146),
  ('assignment -> variant LASIGNMENT expression','assignment',3,'p_assignment','parser.py',150),
  ('assignment -> expression RASIGNMENT variant','assignment',3,'p_assignment','parser.py',151),
  ('assignment -> variant indices LASIGNMENT expression','assignment',4,'p_assignment','parser.py',152),
  ('assignment -> expression RASIGNMENT variant indices','assignment',4,'p_assignment','parser.py',153),
  ('assignment -> variant LASIGNMENT expression RASIGNMENT variant','assignment',5,'p_assignment','parser.py',154),
  ('assignment -> expression RASIGNMENT variant LASIGNMENT expression','assignment',5,'p_assignment','parser.py',155),
  ('conversion -> MINUS variant','conversion',2,'p_conversion','parser.py',162),
  ('conversion -> PLUS variant','conversion',2,'p_conversion','parser.py',163),
  ('UNTIL -> until math_expression do NEWLINE statements','UNTIL',5,'p_UNTIL','parser.py',167),
  ('CHECK -> check math_expression do NEWLINE statements','CHECK',5,'p_CHECK','parser.py',171),
  ('function -> type NAME LSQBRACKET parameters RSQBRACKET begin NEWLINE func_statements end','function',9,'p_function','parser.py',179),
  ('func_statements -> func_statements func_statement','func_statements',2,'p_func_statements','parser.py',184),
  ('func_statements -> func_statement','func_statements',1,'p_func_statements','parser.py',185),
  ('func_statement -> empty NEWLINE','func_statement',2,'p_func_statement','parser.py',192),
  ('func_statement -> declaration NEWLINE','func_statement',2,'p_func_statement','parser.py',193),
  ('func_statement -> assignment NEWLINE','func_statement',2,'p_func_statement','parser.py',194),
  ('func_statement -> conversion NEWLINE','func_statement',2,'p_func_statement','parser.py',195),
  ('func_statement -> CHECK NEWLINE','func_statement',2,'p_func_statement','parser.py',196),
  ('func_statement -> UNTIL NEWLINE','func_statement',2,'p_func_statement','parser.py',197),
  ('func_statement -> go NEWLINE','func_statement',2,'p_func_statement','parser.py',198),
  ('func_statement -> rr NEWLINE','func_statement',2,'p_func_statement','parser.py',199),
  ('func_statement -> rl NEWLINE','func_statement',2,'p_func_statement','parser.py',200),
  ('func_statement -> function_call NEWLINE','func_statement',2,'p_func_statement','parser.py',201),
  ('func_statement -> RETURN NEWLINE','func_statement',2,'p_func_statement','parser.py',202),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','parser.py',206),
  ('parameters -> parameter','parameters',1,'p_parameters','parser.py',207),
  ('parameter -> type NAME','parameter',2,'p_parameter','parser.py',214),
  ('function_call -> NAME LRNDBRACKET variants RRNDBRACKET','function_call',4,'p_function_call','parser.py',218),
  ('function_call -> NAME LRNDBRACKET RRNDBRACKET','function_call',3,'p_function_call','parser.py',219),
  ('RETURN -> return expression','RETURN',2,'p_RETURN','parser.py',228),
  ('declaration -> type error','declaration',2,'p_decl_error','parser.py',239),
  ('declaration -> type variants LASIGNMENT error','declaration',4,'p_decl_error','parser.py',240),
  ('declaration -> field type type error','declaration',4,'p_decl_error','parser.py',241),
  ('declaration -> field type type variants LASIGNMENT error','declaration',6,'p_decl_error','parser.py',242),
  ('declaration -> declaration error','declaration',2,'p_decl_error','parser.py',243),
  ('indices -> LSQBRACKET error RSQBRACKET','indices',3,'p_indices_error','parser.py',252),
  ('indices -> LSQBRACKET error expression RSQBRACKET','indices',4,'p_indices_error','parser.py',253),
  ('indices -> LSQBRACKET expression error RSQBRACKET','indices',4,'p_indices_error','parser.py',254),
  ('indices -> LSQBRACKET error error RSQBRACKET','indices',4,'p_indices_error','parser.py',255),
  ('indices -> indices error','indices',2,'p_indices_error','parser.py',256),
  ('assignment -> variant LASIGNMENT error','assignment',3,'p_assignment_error','parser.py',261),
  ('assignment -> error LASIGNMENT expression','assignment',3,'p_assignment_error','parser.py',262),
  ('assignment -> error RASIGNMENT variant','assignment',3,'p_assignment_error','parser.py',263),
  ('assignment -> expression RASIGNMENT error','assignment',3,'p_assignment_error','parser.py',264),
  ('assignment -> error indices LASIGNMENT expression','assignment',4,'p_assignment_error','parser.py',265),
  ('assignment -> variant indices LASIGNMENT error','assignment',4,'p_assignment_error','parser.py',266),
  ('assignment -> error RASIGNMENT variant indices','assignment',4,'p_assignment_error','parser.py',267),
  ('assignment -> expression RASIGNMENT error indices','assignment',4,'p_assignment_error','parser.py',268),
  ('assignment -> error LASIGNMENT expression RASIGNMENT variant','assignment',5,'p_assignment_error','parser.py',269),
  ('assignment -> variant LASIGNMENT error RASIGNMENT variant','assignment',5,'p_assignment_error','parser.py',270),
  ('assignment -> variant LASIGNMENT expression RASIGNMENT error','assignment',5,'p_assignment_error','parser.py',271),
  ('assignment -> error LASIGNMENT error RASIGNMENT variant','assignment',5,'p_assignment_error','parser.py',272),
  ('assignment -> variant LASIGNMENT error RASIGNMENT error','assignment',5,'p_assignment_error','parser.py',273),
  ('assignment -> error LASIGNMENT expression RASIGNMENT error','assignment',5,'p_assignment_error','parser.py',274),
  ('assignment -> error RASIGNMENT variant LASIGNMENT expression','assignment',5,'p_assignment_error','parser.py',275),
  ('assignment -> expression RASIGNMENT error LASIGNMENT expression','assignment',5,'p_assignment_error','parser.py',276),
  ('assignment -> expression RASIGNMENT variant LASIGNMENT error','assignment',5,'p_assignment_error','parser.py',277),
  ('assignment -> error RASIGNMENT error LASIGNMENT expression','assignment',5,'p_assignment_error','parser.py',278),
  ('assignment -> expression RASIGNMENT error LASIGNMENT error','assignment',5,'p_assignment_error','parser.py',279),
  ('assignment -> error RASIGNMENT variant LASIGNMENT error','assignment',5,'p_assignment_error','parser.py',280),
  ('conversion -> MINUS error','conversion',2,'p_conversion_error','parser.py',285),
  ('conversion -> PLUS error','conversion',2,'p_conversion_error','parser.py',286),
  ('conversion -> conversion error','conversion',2,'p_conversion_error','parser.py',287),
  ('UNTIL -> until error do NEWLINE statements','UNTIL',5,'p_UNTIL_error','parser.py',294),
  ('UNTIL -> UNTIL error','UNTIL',2,'p_UNTIL_error','parser.py',295),
  ('CHECK -> check error do NEWLINE statements','CHECK',5,'p_CHECK_error','parser.py',306),
  ('CHECK -> CHECK error','CHECK',2,'p_CHECK_error','parser.py',307),
  ('function -> type error LSQBRACKET parameters RSQBRACKET begin NEWLINE func_statements end','function',9,'p_function_error','parser.py',317),
  ('function -> type NAME LSQBRACKET error RSQBRACKET begin NEWLINE func_statements end','function',9,'p_function_error','parser.py',318),
  ('function -> type NAME LSQBRACKET parameters RSQBRACKET error NEWLINE func_statements end','function',9,'p_function_error','parser.py',319),
  ('function -> type NAME LSQBRACKET parameters RSQBRACKET begin NEWLINE func_statements error','function',9,'p_function_error','parser.py',320),
  ('function -> type error LSQBRACKET error RSQBRACKET begin NEWLINE func_statements end','function',9,'p_function_error','parser.py',321),
  ('function -> type NAME LSQBRACKET error RSQBRACKET error NEWLINE func_statements end','function',9,'p_function_error','parser.py',322),
  ('function -> type NAME LSQBRACKET parameters RSQBRACKET error NEWLINE func_statements error','function',9,'p_function_error','parser.py',323),
  ('function -> type error LSQBRACKET parameters RSQBRACKET begin NEWLINE func_statements error','function',9,'p_function_error','parser.py',324),
  ('function -> type error LSQBRACKET parameters RSQBRACKET error NEWLINE func_statements end','function',9,'p_function_error','parser.py',325),
  ('function -> type NAME LSQBRACKET error RSQBRACKET begin NEWLINE func_statements error','function',9,'p_function_error','parser.py',326),
  ('function -> type error LSQBRACKET error RSQBRACKET error NEWLINE func_statements end','function',9,'p_function_error','parser.py',327),
  ('function -> type NAME LSQBRACKET error RSQBRACKET error NEWLINE func_statements error','function',9,'p_function_error','parser.py',328),
  ('function -> type error LSQBRACKET parameters RSQBRACKET error NEWLINE func_statements error','function',9,'p_function_error','parser.py',329),
  ('function -> type error LSQBRACKET error RSQBRACKET begin NEWLINE func_statements error','function',9,'p_function_error','parser.py',330),
  ('function -> function error','function',2,'p_function_error','parser.py',331),
  ('RETURN -> return error','RETURN',2,'p_RETURN_error','parser.py',343),
  ('RETURN -> RETURN error','RETURN',2,'p_RETURN_error','parser.py',344),
]
